{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Footer","year","Date","getFullYear","Note","props","className","title","content","onClick","deletenote","id","CreateArea","useState","heading","text","newNote","setNewnote","maximize","setMaximize","updateSetNewNote","event","target","name","value","preValue","autoComplete","onChange","placeholder","rows","Zoom","in","Fab","newnote","preventDefault","App","notes","setNotes","deleteNote","filter","note","index","preNotes","map","item","uuid","ReactDOM","render","document","getElementById"],"mappings":"iLAceA,MAXf,WACE,OACE,iCACE,+BACE,cAAC,IAAD,IADF,eCKSC,MATf,WACE,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACE,iCACE,kDAAgBF,EAAhB,uB,iBCYSG,MAff,SAAcC,GAMZ,OACE,sBAAKC,UAAU,OAAf,UACE,6BAAKD,EAAME,QACX,4BAAIF,EAAMG,UACV,wBAAQC,QARZ,WACEJ,EAAMK,WAAWL,EAAMM,KAOrB,SAA8B,cAAC,IAAD,U,iDC0CrBC,MAlDf,SAAoBP,GAClB,MAA8BQ,mBAAS,CAACC,QAAS,GAAIC,KAAM,KAA3D,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEA,SAASC,EAAkBC,GACzB,MAAsBA,EAAMC,OAArBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACbP,GAAW,SAAAQ,GACT,OAAO,2BAAIA,GAAX,kBAAsBF,EAAOC,OAejC,OACE,8BACE,uBAAMlB,UAAU,cAAhB,UACIY,EAAW,uBACXQ,aAAa,MACbH,KAAK,UACLI,SAAUP,EACVI,MAAOR,EAAQF,QACfc,YAAY,UACT,KACL,0BACEnB,QAhBR,WACEU,GAAY,IAgBNI,KAAK,OACLI,SAAUP,EACVI,MAAOR,EAAQD,KACfa,YAAY,iBACZC,KAAMX,EAAW,IAAM,MAEvBA,EAAW,cAACY,EAAA,EAAD,CAAMC,IAAI,EAAV,SACX,cAACC,EAAA,EAAD,CAAKvB,QA9Bb,SAAsBY,GACpBhB,EAAM4B,QAAQjB,GACdC,EAAW,CAACH,QAAS,GAAIC,KAAM,KAC/BM,EAAMa,kBA2BA,SACE,cAAC,IAAD,QAEM,W,QCNHC,MApCf,WACE,MAA0BtB,mBAAS,IAAnC,mBAAOuB,EAAP,KAAcC,EAAd,KASA,SAASC,EAAW3B,GAClB0B,GAAS,SAAAZ,GAAQ,OAAIA,EAASc,QAAO,SAACC,EAAMC,GAC1C,OAAOA,IAAU9B,QAMrB,OACE,gCACE,cAAC,EAAD,IACE,cAAC,EAAD,CAAYsB,QAjBlB,SAAkBO,GAChBH,GAAS,SAAAK,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAqBF,UAgBpBJ,EAAMO,KAAI,SAACC,EAAMH,GAAP,OACT,cAAC,EAAD,CAEE9B,GAAI8B,EACJlC,MAAOqC,EAAK9B,QACZN,QAASoC,EAAK7B,KACdL,WAAY4B,GAJPO,UAOT,cAAC,EAAD,QClCNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b64e348d.chunk.js","sourcesContent":["import React from \"react\";\nimport HighlightIcon from \"@material-ui/icons/Highlight\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>\n        <HighlightIcon />\n        Keeper\n      </h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright â“’ {year} by SuSSan@143</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nfunction Note(props) {\n  \n  function handleClick () {\n    props.deletenote(props.id)\n  }\n\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button onClick={handleClick}><DeleteIcon /></button>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction CreateArea(props) {\n  const [newNote, setNewnote] = useState({heading: \"\", text: \"\"});\n  const [maximize, setMaximize] = useState(false);\n\n  function updateSetNewNote (event) {\n    const {name, value} = event.target\n    setNewnote(preValue => {\n      return {...preValue, [name]: value}\n    })\n  }\n\n  function passNewNote (event) {\n    props.newnote(newNote)\n    setNewnote({heading: \"\", text: \"\"})\n    event.preventDefault();\n  }\n\n  function updateSetMaximize() {\n    setMaximize(true);\n  }\n\n\n  return (\n    <div>\n      <form className=\"create-note\">\n        { maximize ? <input\n          autoComplete=\"off\"\n          name=\"heading\"\n          onChange={updateSetNewNote}\n          value={newNote.heading}\n          placeholder=\"Title\"\n        /> : null }\n        <textarea\n          onClick={updateSetMaximize}\n          name=\"text\"\n          onChange={updateSetNewNote}\n          value={newNote.text}\n          placeholder=\"Take a note...\"\n          rows={maximize ? \"3\" : \"1\"}\n        />\n        { maximize ? <Zoom in={true}>\n          <Fab onClick={passNewNote}>\n            <AddIcon />\n          </Fab>\n        </Zoom> : null }\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport * as uuid from \"uuid\"\n\nfunction App() {\n  const [notes, setNotes] = useState([])\n  \n  \n  function newNote (note) {\n    setNotes(preNotes => {\n      return [...preNotes, note]\n    })\n  }\n\n  function deleteNote(id) {\n    setNotes(preValue => preValue.filter((note, index) => {\n      return index !== id;\n    }))\n  }\n\n  \n\n  return (\n    <div>\n      <Header />\n        <CreateArea newnote={newNote} />\n      {notes.map((item, index) => (\n        <Note\n          key={uuid.v4()}\n          id={index}\n          title={item.heading}\n          content={item.text}\n          deletenote={deleteNote}\n        />\n      ))}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n"],"sourceRoot":""}